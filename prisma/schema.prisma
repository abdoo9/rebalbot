generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  telegramId BigInt    @unique @map("telegram_id")
  contact    String?
  updatedAt  DateTime  @updatedAt @map("updated_at")
  createdAt  DateTime  @default(now()) @map("created_at")
  Request    Request[]

  @@map(name: "users")
}

model Request {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  userId              String    @map("user_id") @db.ObjectId
  messageId           Int       @map("message_id")
  fromCurrency        String?   @map("from_currency")
  toCurrency          String?   @map("to_currency")
  submittedAt         DateTime? @map("submitted_at")
  amount              Float?
  fee                 Float?
  finalAmount         Float?    @map("final_amount")
  description         String?
  fromWallet          String?   @map("from_wallet")
  userReceivingWallet String?   @map("user_receiving_wallet")
  transactionId       String?   @map("transaction_id")
  photoId             String?   @map("photo_id")
  exchangeRate        Float     @map("exchange_rate")
  updatedAt           DateTime  @updatedAt @map("updated_at")
  createdAt           DateTime  @default(now()) @map("created_at")
  User                User      @relation(fields: [userId], references: [id])

  @@map(name: "requests")
}

model ExchangeRate {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  from         String   @map("from_currency")
  to           String   @map("to_currency")
  FromCurrency Currency @relation("FromCurrencyExchangeRates", fields: [from], references: [currency])
  ToCurrency   Currency @relation("ToCurrencyExchangeRates", fields: [to], references: [currency])
  rate         Float
  fee          Float
  updatedAt    DateTime @updatedAt @map("updated_at")
  createdAt    DateTime @default(now()) @map("created_at")

  @@unique([from, to], name: "unique_from_to")
  @@map(name: "exchange_rates")
}

model Currency {
  id                        String         @id @default(auto()) @map("_id") @db.ObjectId
  currency                  String         @unique @map("currency")
  sticker                   String
  adminWallet               String         @map("admin_wallet")
  FromCurrencyExchangeRates ExchangeRate[] @relation("FromCurrencyExchangeRates")
  ToCurrencyExchangeRates   ExchangeRate[] @relation("ToCurrencyExchangeRates")

  @@map("currencies")
}

model Session {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key   String @unique
  value String
}
